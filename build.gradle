/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'finner' at '30/11/16 23:07' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceCompatibility = 11
targetCompatibility = 11
version = 1.0

// Add some JAR Manifest attributes

// 1st step in adding Junit 5
// https://www.baeldung.com/junit-5-gradle
test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Java Patterns',
                'Implementation-Version': version
    }
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // 2nd step in adding Junit5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'

    // backward compatibility with JUnit 3 & 4
    testCompileOnly 'junit:junit:4.12'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'
}
